{"version":3,"sources":["components/Header/Header.js","components/Question/Question.js","components/Answer/Answer.js","components/Timer/Timer.js","components/Scores/Scores.js","components/Feedback/Feedback.js","components/PageLink/PageLink.js","components/Form/Form.js","pages/Quiz/Quiz.js","components/StatsTable/StatsTable.js","components/Button/Button.js","pages/Scores/Scores.js","pages/Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","Question","question","Answer","answer","onClick","message","className","Timer","start","seconds","Scores","end","correct","incorrect","Feedback","PageLink","destination","href","Form","onSubmit","onChange","error","htmlFor","type","name","maxLength","Quiz","props","useState","setMessage","JSON","parse","window","localStorage","getItem","stats","setStats","token","setToken","initials","setInitials","category","setCategory","difficulty","setDifficulty","questions","setQuestions","setSeconds","setCorrect","setStart","setEnd","setError","setIncorrect","useEffect","location","state","setItem","stringify","sessionToken","cat","level","a","axios","get","response","data","response_code","results","forEach","result","decode","correct_answer","answers","shuffle","incorrect_answers","i","length","validateToken","then","res","useLayoutEffect","timer","setTimeout","time","clearTimeout","wrong","q","slice","percentage","Math","round","formatTime","arr","Date","now","toLocaleString","split","trim","array","tempValue","randIndex","currentIndex","floor","random","html","text","document","createElement","innerHTML","value","map","index","key","userAnswer","event","target","toUpperCase","handleChange","preventDefault","isNaN","userData","date","handleSave","StatsTable","stat","Button","music","setMusic","movies","setMovies","television","setTelevision","charAt","toLowerCase","filter","removeItem","Menu","handleCategory","handleDifficulty","diff","checkState","to","pathname","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.711f33d0.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nfunction Header() {\n    return (\n        <div id=\"header-container\">\n        <h1 id=\"header\">Trivia Master</h1>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react'\nimport './Question.css'\n\nfunction Question({ question }) {\n    return <p id=\"question\">{question}</p>\n  }\n\nexport default Question;","import React from 'react'\nimport './Answer.css'\n\nfunction Answer({ answer, onClick, message }) {\n    return <li className=\"answer\" onClick={!message ? onClick : null}>{answer}</li>\n  }\n\nexport default Answer;","import React from 'react'\nimport './Timer.css'\n\nfunction Timer({ start, seconds }) {\n\n    return start && <p id=\"timer\">{seconds}</p>\n}\n\nexport default Timer;","import React from 'react';\nimport './Scores.css'\n\nfunction Scores({ start, end, correct, incorrect }) {\n    return (\n        (start || end) &&\n        <div id=\"score-container\">\n            <p id=\"correct\">Correct: <span className=\"score-text\">{correct}</span></p>\n            <p id=\"incorrect\">Incorrect: <span className=\"score-text\">{incorrect}</span></p>\n        </div>\n    )\n}\n\nexport default Scores;","import React from 'react'\nimport './Feedback.css'\n\nfunction Feedback({ message }) {\n    return <p id=\"feedback\">{message}</p>\n  }\n\nexport default Feedback;","import React from 'react';\nimport './PageLink.css'\n\nfunction PageLink( {destination, message} ) {\n    return(\n        <div id=\"link-container\">\n        <a id=\"page-link\" href={destination}>{message}</a>\n        </div>\n    )\n}\n\nexport default PageLink;","import React from 'react'\nimport './Form.css'\nimport PageLink from '../PageLink/PageLink'\n\nfunction Form({ end, onSubmit, onChange, error }) {\n    return (\n        end && \n        <form onSubmit={onSubmit}>\n            <label htmlFor=\"initials\">Enter your initials</label><br />\n            <input type=\"text\" name=\"initials\" onChange={onChange} maxLength=\"3\" />\n            <button type=\"submit\">Submit</button>\n            {error && <p id=\"error\">{error}</p>}\n            <PageLink destination=\"#/\" message={\"Play Again\"} />\n        </form>\n    )\n}\n\nexport default Form;","import React, { useState, useLayoutEffect, useEffect } from 'react';\nimport './Quiz.css'\nimport axios from 'axios'\nimport Question from '../../components/Question/Question'\nimport Answer from '../../components/Answer/Answer';\nimport Timer from '../../components/Timer/Timer';\nimport Scores from '../../components/Scores/Scores';\nimport Feedback from '../../components/Feedback/Feedback'\nimport Form from '../../components/Form/Form'\n\nfunction Quiz(props) {\n    // State for trivia questions, timer, right/wrong count\n    const [message, setMessage] = useState('')\n    const [stats, setStats] = useState(JSON.parse(window.localStorage.getItem('stats')) || [])\n    const [token, setToken] = useState(window.localStorage.getItem('token') || '')\n    const [initials, setInitials] = useState('')\n    const [category, setCategory] = useState('')\n    const [difficulty, setDifficulty] = useState('')\n    const [questions, setQuestions] = useState([])\n    const [seconds, setSeconds] = useState();\n    const [correct, setCorrect] = useState(0);\n    const [start, setStart] = useState(false)\n    const [end, setEnd] = useState(false)\n    const [error, setError] = useState('')\n    const [incorrect, setIncorrect] = useState(0);\n\n    useEffect(() => {\n        if (!props.location.state) {\n            window.location = \"#/\"\n        } else {\n            setCategory(props.location.state.category)\n            setDifficulty(props.location.state.difficulty)\n        }\n\n    },[props.location.state])\n\n    // When stats state is updated, save to localStorage\n    useEffect(() => {\n        window.localStorage.setItem('stats', JSON.stringify(stats))\n    }, [stats])\n\n    // If no token, set error to retreive new token, else validate token\n    // If valid token, format questions and start quiz\n    useEffect(() => {\n\n        window.localStorage.setItem('token', token)\n        if (!token) setError(\"new token needed\")\n        if (token !== '' && difficulty !== '') validateToken(token, category, difficulty)\n\n        async function validateToken(sessionToken, cat, level) {\n            const response = await axios.get(`https://opentdb.com/api.php?token=${sessionToken}&amount=15&category=${cat}&difficulty=${level}&type=multiple`)\n            if (response.data.response_code === 4 || response.data.response_code === 3) {\n                setError(\"new token needed\")\n            } \n            else {\n                response.data.results.forEach(result => {\n                    result.question = decode(result.question)\n                    result.correct_answer = decode(result.correct_answer)\n                    result.answers = shuffle([...result.incorrect_answers, result.correct_answer])\n                    for (var i = 0; i < result.answers.length; i++) {\n                        result.answers[i] = decode(result.answers[i])\n                    }\n                })\n                setSeconds(10)\n                setQuestions(response.data.results)\n                setStart(true)\n            }\n        }\n    }, [token, category, difficulty])\n\n    // If new token is needed, request new token and set to state \n    useEffect(() => {\n        if (error === \"new token needed\") {\n            axios.get(\"https://opentdb.com/api_token.php?command=request\")\n                .then(res => setToken(res.data.token)).then(setError(''))\n        }\n    }, [error])\n\n\n    // If questions in state, decrement timer each second\n    useLayoutEffect(() => {\n        if (!questions.length) return;\n        const timer = setTimeout(() => {\n            setSeconds(time => time - 1);\n        }, 1000);\n        return () => clearTimeout(timer);\n    });\n\n    // If user answer is correct, increment correct, else increment incorrect. \n    // Show feedback, remove question and reset timer \n    const userAnswer = (index) => {\n        if (questions[0].answers[index] === questions[0].correct_answer) {\n            setMessage(\"Correct!\")\n            setCorrect(correct => correct + 1)\n        } else {\n            setMessage(`Wrong. Correct answer: ${questions[0].correct_answer}`)\n            setIncorrect(incorrect => incorrect + 1)\n        } \n        setTimeout(() => {\n            setMessage(\"\")\n            setQuestions(q => q.slice(1));\n            setSeconds(10);\n        }, 1000);\n    }\n\n    // If questions left and time is 0, increment incorrect count, remove current question, reset timer\n    // If correct or incorrect is non-zero AND no questions left, end quiz\n    useEffect(() => {\n        if (questions.length && seconds < 1) {\n            setIncorrect(wrong => wrong + 1)\n            setQuestions(q => q.slice(1));\n            setSeconds(10);\n        }\n        if ((correct || incorrect) && !questions.length) {\n            let percentage = Math.round((correct / (correct + incorrect)) * 100)\n            setMessage(`You scored ${percentage}%. Thanks for playing!`)\n            setStart(false)\n            setEnd(true)\n        }\n    }, [correct, incorrect, questions, seconds])\n\n\n    // Set input value to state\n    const handleChange = (event) => {\n        setInitials(event.target.value.toUpperCase())\n    }\n\n    // Save user initials and score to storage state, show error if no input value or input !isNaN\n    const handleSave = (event) => {\n        event.preventDefault()\n\n        if (!isNaN(initials) || !initials) {\n            setError(\"Please enter at least one initial\")\n            return;\n        }\n        let userData = {\n            initials, difficulty, incorrect, correct, category,\n            date: new Date(Date.now()).toLocaleString().split(\",\")[0],\n            time: formatTime()\n        }\n        setStats(data => [...data, userData])\n        window.location = \"#/scores\";\n    }\n    // Format time\n    const formatTime = () => {\n        let time = new Date(Date.now()).toLocaleString().split(\",\")[1].trim();\n        let arr = time.split(\":\")\n        return `${arr[0]}:${arr[1]} ${arr[2].slice(3)}`;\n    }\n\n    // Randomize array order\n    const shuffle = (array) => {\n        var currentIndex = array.length, tempValue, randIndex;\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            tempValue = array[currentIndex];\n            array[currentIndex] = array[randIndex];\n            array[randIndex] = tempValue;\n        }\n        return array;\n    }\n\n    // Convert special character codes from questions and answers to text\n    function decode(html) {\n        var text = document.createElement(\"textarea\");\n        text.innerHTML = html;\n        return text.value;\n    }\n\n    return (\n        <div>\n            {(end && message) && <Feedback message={message} /> }\n            {(questions.length) > 0 &&\n                <div id=\"question-answer-container\">\n                    <Question question={questions[0].question} />\n                    <Timer start={start} seconds={(message && !end) ? message : seconds} />\n                    <div id=\"answer-container\">\n                        <ol type=\"A\">\n                            {questions[0].answers.map((answer, index) => (\n                                <Answer message={message} key={index} answer={answer} onClick={() => userAnswer(index)}/>))}\n                        </ol>\n                    </div>\n                </div>\n            } \n            <Scores start={start} end={end} correct={correct} incorrect={incorrect} />\n            <Form \n                end={end} error={error} \n                onChange={(event) => handleChange(event)} \n                onSubmit={(event) => handleSave(event)}/>\n        </div>\n    )\n}\n\nexport default Quiz;","import React from 'react';\nimport './StatsTable.css'\n\nfunction StatsTable({ stats, category }) {\n\n    return (\n      <div className=\"table-container\">\n        <table>\n          <caption>{category}</caption>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Diff.</th>\n            <th>Score</th>\n            <th>Date</th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n            {stats.map((stat, index) => (\n                <tr key={index}>\n                    <td>{stat.initials}</td>\n                    <td>{stat.difficulty}</td>\n                    <td>{Math.round((stat.correct / (stat.correct + stat.incorrect)) * 100)}%</td>\n                    <td>{stat.date}</td>\n                    <td>{stat.time}</td>\n                </tr>\n            ))}\n        </tbody>\n      </table>\n      </div>\n    )\n}\n\nexport default StatsTable;","import React from 'react';\nimport './Button.css'\n\nfunction Button({ className, onClick, text }) {\n    return (\n      <button className={className} onClick={onClick}>{text}</button>\n    )\n}\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport './Scores.css'\nimport StatsTable from '../../components/StatsTable/StatsTable';\nimport PageLink from '../../components/PageLink/PageLink'\nimport Button from '../../components/Button/Button'\n\n\nfunction Scores() {\n\n    const [stats, setStats] = useState(JSON.parse(window.localStorage.getItem('stats')) || []);\n    const [music, setMusic] = useState([]);\n    const [movies, setMovies] = useState([]);\n    const [television, setTelevision] = useState([]);\n\n    useEffect(() => {\n        stats.forEach(stat => {\n            stat.difficulty = stat.difficulty.charAt(0).toUpperCase() + stat.difficulty.slice(1).toLowerCase()\n        })\n        setMusic(stats.filter(stat => stat.category === \"12\"))\n        setMovies(stats.filter(stat => stat.category === \"11\"))\n        setTelevision(stats.filter(stat => stat.category === \"14\"))\n    }, [stats])\n\n    const clear = () => {\n        setStats([])\n        localStorage.removeItem(\"stats\");\n    }\n\n    return (\n        stats.length > 0 ?\n            <div id=\"stats-container\">\n                <PageLink destination=\"#/\" message={\"Back\"} />\n                {music.length > 0 &&\n                    <StatsTable category={\"Music\"} stats={music} />\n                }\n                {movies.length > 0 &&\n                    <StatsTable category={\"Movies\"} stats={movies} />\n                }\n                {television.length > 0 &&\n                    <StatsTable category={\"Television\"} stats={television} />\n                }\n                <Button className=\"clear-btn\" onClick={() => clear()} text=\"Clear\" />\n            </div>\n            : <div id=\"stats-container\">\n                <p>No stats available.</p>\n                <PageLink destination=\"#/\" message={\"Play a quiz now!\"} />\n            </div>\n            \n\n    )\n}\n\nexport default Scores;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Menu.css'\nimport Button from '../../components/Button/Button'\nimport PageLink from '../../components/PageLink/PageLink'\n\nfunction Menu() {\n    \n    const [category, setCategory] = useState('')\n    const [difficulty, setDifficulty] = useState('')\n\n    const handleCategory = (cat) => {\n        if (category === cat) {\n            setCategory('')\n        } else setCategory(cat)\n    }\n\n    const handleDifficulty = (diff) => {\n        if (difficulty === diff) {\n            setDifficulty('')\n        } else setDifficulty(diff)\n    }\n\n    const checkState = (event) => {\n        if (!category || !difficulty) {\n            event.preventDefault()\n        }\n    }\n\n    return (\n        <div id=\"menu\">\n            <div className=\"btn-container\">\n                <p>Category:</p>\n                <Button className={`menu-btn category-btn ` + (category === \"12\" ? `active` : 'inactive')} onClick={() => handleCategory(\"12\")} text={\"Music\"}/>\n                <Button className={`menu-btn category-btn ` + (category === \"11\" ? `active` : 'inactive')}  onClick={() => handleCategory(\"11\")} text={\"Movies\"} />\n                <Button className={`menu-btn category-btn ` + (category === \"14\" ? `active` : 'inactive')} onClick={() => handleCategory(\"14\")} text={\"Television\"} />\n            </div>\n            <div className=\"btn-container\">\n                <p>Difficulty:</p>\n                <Button className={`menu-btn difficulty-btn ` + (difficulty === \"easy\" ? `active` : 'inactive')}   onClick={() => handleDifficulty(\"easy\")} text={\"Easy\"}/>\n                <Button className={`menu-btn difficulty-btn ` + (difficulty === \"medium\" ? `active` : 'inactive')}   onClick={() => handleDifficulty(\"medium\")} text={\"Medium\"} />\n                <Button className={`menu-btn difficulty-btn ` + (difficulty === \"hard\" ? `active` : 'inactive')}  onClick={() => handleDifficulty(\"hard\")} text={\"Hard\"} />\n            </div>\n            <Link onClick={(event) => checkState(event)} id=\"start-quiz\" className={(!category || !difficulty) ? 'disabled' : 'abled'} to={{ pathname: \"/quiz\", state: { category: category, difficulty: difficulty }}}>Start Quiz!</Link>\n            <PageLink destination=\"#/scores\" message={\"See scores\"} />\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header/Header'\nimport Quiz from './pages/Quiz/Quiz'\nimport Scores from './pages/Scores/Scores'\nimport Menu from './pages/Menu/Menu'\n\n\nfunction App() {\n\n  return (\n      <HashRouter>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Menu} />\n          <Route exact path=\"/quiz\" component={Quiz} />\n          <Route exact path=\"/scores\" component={Scores} />\n        </Switch>\n      </HashRouter>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}